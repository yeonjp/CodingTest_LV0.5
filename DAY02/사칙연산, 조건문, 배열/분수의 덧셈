Description
첫 번째 분수의 분자와 분모를 뜻하는 numer1, denom1, 두 번째 분수의 분자와 분모를 뜻하는 numer2, denom2가 매개변수로 주어집니다. 두 분수를 더한 값을 기약 분수로 나타냈을 때 분자와 분모를 순서대로 담은 배열을 return 하도록 solution 함수를 완성해보세요.

제한사항
0 <numer1, denom1, numer2, denom2 < 1,000
입출력 예
numer1	denom1	numer2	denom2	result
1	2	3	4	[5, 4]
9	2	1	3	[29, 6]
입출력 예 설명
입출력 예 #1

1 / 2 + 3 / 4 = 5 / 4입니다. 따라서 [5, 4]를 return 합니다.
입출력 예 #2

9 / 2 + 1 / 3 = 29 / 6입니다. 따라서 [29, 6]을 return 합니다.

solution
class Solution {
    public int[] solution(int numer1, int denom1, int numer2, int denom2) {
        // 두 분수의 합을 구하기 위해 분모를 맞추고 계산
        int numer = (numer1 * denom2) + (numer2 * denom1);  // 분자 계산
        int denom = denom1 * denom2;  // 공통 분모 계산
        
        // 최대공약수를 구하기 위한 변수 초기화
        int max = 1;
        
        // 분자와 분모의 최대공약수 (GCD) 구하기
        for(int i = 1; i <= numer && i <= denom; i++){
            if(denom % i == 0 && numer % i == 0){
                max = i;  // 공약수 중 가장 큰 값을 max에 저장
            }
        }
        
        // 분자와 분모를 최대공약수로 나누어 기약 분수로 만들기
        numer = numer / max;
        denom = denom / max;
        
        // 결과를 배열에 담아 반환
        int[] answer = {numer, denom};
        
        return answer;
    }
}
